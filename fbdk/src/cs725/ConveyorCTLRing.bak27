<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE FBType SYSTEM "http://www.holobloc.com/xml/LibraryElement.dtd" >
<FBType Name="ConveyorCTLRing" Comment="Basic Function Block Type" >
  <Identification Standard="61499-2" />
  <VersionInfo Organization="Rockwell Automation" Version="0.2" Author="JHC" Date="2003-12-04" Remarks="Renamed for better indexing." />
  <VersionInfo Organization="Rockwell Automation" Version="0.1" Author="JHC" Date="2002-11-05" Remarks="Corrected missing ST element in Algorithm REQ." />
  <VersionInfo Organization="Rockwell Automation" Version="0.0" Author="JHC" Date="2000-05-30" />
  <CompilerInfo header="package fb.rt.cs725;" >
  </CompilerInfo>
  <InterfaceList>
    <EventInputs>
      <Event Name="INIT" Comment="Initialization Request" >
        <With Var="PE" />
        <With Var="Block" />
        <With Var="Candidate" />
        <With Var="PE13CS" />
        <With Var="InitToken" />
      </Event>
      <Event Name="REQ" Comment="Normal Execution Request" >
        <With Var="PE" />
        <With Var="Block" />
        <With Var="Candidate" />
        <With Var="PE13CS" />
        <With Var="InitToken" />
      </Event>
      <Event Name="CAS_STOP" >
      </Event>
      <Event Name="CAS_START" >
      </Event>
      <Event Name="TokenEvent" >
      </Event>
    </EventInputs>
    <EventOutputs>
      <Event Name="INITO" Comment="Initialization Confirm" >
        <With Var="MotoRotate" />
        <With Var="BlockCon" />
        <With Var="TokenOut" />
      </Event>
      <Event Name="CNF" Comment="Execution Confirmation" >
        <With Var="MotoRotate" />
        <With Var="BlockCon" />
        <With Var="TokenOut" />
      </Event>
      <Event Name="STOP" >
      </Event>
      <Event Name="START" >
      </Event>
      <Event Name="TokenEventOut" >
        <With Var="TokenOut" />
      </Event>
    </EventOutputs>
    <InputVars>
      <VarDeclaration Name="PE" Type="BOOL" Comment="Input event qualifier" />
      <VarDeclaration Name="Block" Type="BOOL" />
      <VarDeclaration Name="Candidate" Type="BOOL" />
      <VarDeclaration Name="TokenIn" Type="BOOL" />
      <VarDeclaration Name="PE13CS" Type="BOOL" />
      <VarDeclaration Name="InitToken" Type="BOOL" />
    </InputVars>
    <OutputVars>
      <VarDeclaration Name="MotoRotate" Type="BOOL" Comment="Output event qualifier" />
      <VarDeclaration Name="BlockCon" Type="BOOL" />
      <VarDeclaration Name="TokenOut" Type="BOOL" />
    </OutputVars>
  </InterfaceList>
  <BasicFB>
    <InternalVars>
      <VarDeclaration Name="lastPE" Type="BOOL" InitialValue="1" />
      <VarDeclaration Name="lastBlock" Type="BOOL" InitialValue="0" />
    </InternalVars>
    <ECC >
      <ECState Name="START" Comment="Initial State" x="552.94116" y="429.41174" >
      </ECState>
      <ECState Name="INIT" Comment="Initialization" x="923.5294" y="141.17647" >
        <ECAction Algorithm="INIT" Output="INITO" />
        <ECAction Output="CNF" />
      </ECState>
      <ECState Name="REQ" Comment="Normal execution" x="511.7647" y="3488.235" >
        <ECAction Algorithm="REQ" Output="CNF" />
      </ECState>
      <ECState Name="AccessCritical" x="2523.5293" y="1200.0" >
        <ECAction Algorithm="START" Output="CNF" />
        <ECAction Algorithm="TokenInUse" Output="TokenEventOut" />
      </ECState>
      <ECState Name="PassToken" x="3776.4705" y="2223.5293" >
        <ECAction Algorithm="START" Output="CNF" />
        <ECAction Algorithm="TokenInUse" Output="CNF" />
      </ECState>
      <ECState Name="AwaitToken" x="2735.294" y="529.41174" >
      </ECState>
      <ECTransition Source="START" Destination="INIT" Condition="INIT" x="923.5294" y="429.41174" />
      <ECTransition Source="INIT" Destination="START" Condition="1" x="552.94116" y="141.17647" />
      <ECTransition Source="START" Destination="AccessCritical" Condition="REQ&#38;!PE &#38; TokenIn" x="1664.7058" y="994.1176" />
      <ECTransition Source="AccessCritical" Destination="PassToken" Condition="REQ&#38;!PE13CS" x="3347.0588" y="1847.0588" />
      <ECTransition Source="PassToken" Destination="START" Condition="1" x="1123.5294" y="2123.5293" />
    </ECC>
  <Algorithm Name="INIT" Comment="Initialization algorithm" >
    <Other Language="Java" Text="MotoRotate.value=true;&#10;Block.value=false;&#10;TokenOut.value = InitToken.value;&#10;System.out.println(this+&#34; &#34;+MotoRotate.value);&#10;System.out.println(MotoRotate.value);&#10;" />
  </Algorithm>
  <Algorithm Name="REQ" Comment="Normally executed algorithm" >
    <Other Language="Java" Text="System.out.println(this+&#34; -> Candidate&#34;+Candidate.value);&#10;if(Candidate.value){&#10;if(lastPE.value!=PE.value){&#10;if(!PE.value){&#10;BlockCon.value=true;&#10;System.out.println(&#34;BlockCon = true&#34;);&#10;}&#10;else{&#10;BlockCon.value=false;&#10;System.out.println(&#34;BlockCon = false&#34;);&#10;}&#10;lastPE.value=PE.value;&#10;}&#10;if(lastBlock.value!=Block.value){&#10;if(Block.value){&#10;STOP.serviceEvent(this);&#10;MotoRotate.value=false;&#10;System.out.println(&#34;Cas Stop&#34;);&#10;}&#10;else{&#10;START.serviceEvent(this);&#10;MotoRotate.value=true;&#10;System.out.println(&#34;Cas Start&#34;);&#10;}&#10;lastBlock.value=Block.value;&#10;}&#10;}&#10;" />
  </Algorithm>
  <Algorithm Name="START" >
    <Other Language="Java" Text="MotoRotate.value=true;&#10;System.out.println(this+&#34; Start &#34;+MotoRotate.value);&#10;&#10;System.out.println(&#34;Start &#34;+MotoRotate.value);&#10;" />
  </Algorithm>
  <Algorithm Name="STOP" >
    <Other Language="Java" Text="MotoRotate.value=false;&#10;System.out.println(this+&#34; Stop &#34;+MotoRotate.value);&#10;&#10;System.out.println(&#34;Stop &#34;+MotoRotate.value);&#10;" />
  </Algorithm>
  <Algorithm Name="TokenInUse" >
    <Other Language="Java" Text="TokenOut.value = false;&#10;" />
  </Algorithm>
  <Algorithm Name="TokenFree" >
    <Other Language="Java" Text="TokenOut.value = true;&#10;" />
  </Algorithm>
  </BasicFB>
</FBType>
