<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE FBType SYSTEM "http://www.holobloc.com/xml/LibraryElement.dtd" >
<FBType Name="ConveyorCTLRing" Comment="Basic Function Block Type" >
  <Identification Standard="61499-2" />
  <VersionInfo Organization="Rockwell Automation" Version="0.2" Author="JHC" Date="2003-12-04" Remarks="Renamed for better indexing." />
  <VersionInfo Organization="Rockwell Automation" Version="0.1" Author="JHC" Date="2002-11-05" Remarks="Corrected missing ST element in Algorithm REQ." />
  <VersionInfo Organization="Rockwell Automation" Version="0.0" Author="JHC" Date="2000-05-30" />
  <CompilerInfo header="package fb.rt.cs725;" >
  </CompilerInfo>
  <InterfaceList>
    <EventInputs>
      <Event Name="INIT" Comment="Initialization Request" >
        <With Var="PE" />
        <With Var="Block" />
        <With Var="Candidate" />
      </Event>
      <Event Name="REQ" Comment="Normal Execution Request" >
        <With Var="PE" />
        <With Var="Block" />
        <With Var="Candidate" />
      </Event>
      <Event Name="CAS_STOP" >
      </Event>
      <Event Name="CAS_START" >
      </Event>
      <Event Name="TokenEvent" >
      </Event>
    </EventInputs>
    <EventOutputs>
      <Event Name="INITO" Comment="Initialization Confirm" >
        <With Var="MotoRotate" />
        <With Var="BlockCon" />
      </Event>
      <Event Name="CNF" Comment="Execution Confirmation" >
        <With Var="MotoRotate" />
        <With Var="BlockCon" />
      </Event>
      <Event Name="STOP" >
      </Event>
      <Event Name="START" >
      </Event>
      <Event Name="TokenEventOut" >
      </Event>
    </EventOutputs>
    <InputVars>
      <VarDeclaration Name="PE" Type="BOOL" Comment="Input event qualifier" />
      <VarDeclaration Name="Block" Type="BOOL" />
      <VarDeclaration Name="Candidate" Type="BOOL" />
      <VarDeclaration Name="TokenIn" Type="BOOL" />
    </InputVars>
    <OutputVars>
      <VarDeclaration Name="MotoRotate" Type="BOOL" Comment="Output event qualifier" />
      <VarDeclaration Name="BlockCon" Type="BOOL" />
      <VarDeclaration Name="TokenOut" Type="BOOL" />
    </OutputVars>
  </InterfaceList>
  <BasicFB>
    <InternalVars>
      <VarDeclaration Name="lastPE" Type="BOOL" InitialValue="1" />
      <VarDeclaration Name="lastBlock" Type="BOOL" InitialValue="0" />
    </InternalVars>
    <ECC >
      <ECState Name="START" Comment="Initial State" x="552.94116" y="429.41174" >
      </ECState>
      <ECState Name="INIT" Comment="Initialization" x="923.5294" y="141.17647" >
        <ECAction Algorithm="INIT" Output="INITO" />
        <ECAction Output="CNF" />
      </ECState>
      <ECState Name="REQ" Comment="Normal execution" x="223.5294" y="970.5882" >
        <ECAction Algorithm="REQ" Output="CNF" />
      </ECState>
      <ECState Name="CAS_START" x="1300.0" y="1294.1177" >
        <ECAction Algorithm="START" Output="START" />
        <ECAction Output="CNF" />
      </ECState>
      <ECState Name="CAS_STOP" x="1541.1764" y="700.0" >
        <ECAction Algorithm="STOP" Output="STOP" />
        <ECAction Output="CNF" />
      </ECState>
      <ECTransition Source="START" Destination="INIT" Condition="INIT" x="923.5294" y="429.41174" />
      <ECTransition Source="INIT" Destination="START" Condition="1" x="552.94116" y="141.17647" />
      <ECTransition Source="START" Destination="REQ" Condition="REQ&#38;Candidate" x="552.94116" y="717.64703" />
      <ECTransition Source="REQ" Destination="START" Condition="1" x="223.5294" y="647.05884" />
      <ECTransition Source="START" Destination="CAS_START" Condition="CAS_START" x="964.7059" y="1064.7058" />
      <ECTransition Source="CAS_START" Destination="START" Condition="1" x="1217.6471" y="1005.8823" />
      <ECTransition Source="START" Destination="CAS_STOP" Condition="CAS_STOP" x="1111.7646" y="700.0" />
      <ECTransition Source="CAS_STOP" Destination="START" Condition="1" x="1405.8823" y="582.3529" />
    </ECC>
  <Algorithm Name="INIT" Comment="Initialization algorithm" >
    <ST Text="MotoRotate := TRUE;&#10;Block := FALSE;&#10;&#10;System.out.println(this + &#34; &#34; + MotoRotate);&#10;System.out.println(MotoRotate);&#10;" />
  </Algorithm>
  <Algorithm Name="REQ" Comment="Normally executed algorithm" >
    <Other Language="Java" Text="System.out.println(this+&#34; -> Candidate&#34;+Candidate.value);&#10;if(Candidate.value){&#10;	if(lastPE.value!=PE.value){&#10;		if(!PE.value){&#10;			BlockCon.value=true;&#10;			System.out.println(&#34;BlockCon = true&#34;);&#10;		}&#10;		else{&#10;			BlockCon.value=false;&#10;			System.out.println(&#34;BlockCon = false&#34;);&#10;		}&#10;		lastPE.value=PE.value;&#10;	}&#10;	if(lastBlock.value!=Block.value){&#10;		if(Block.value){&#10;			STOP.serviceEvent(this);&#10;			MotoRotate.value=false;&#10;			System.out.println(&#34;Cas Stop&#34;);&#10;		}&#10;		else{&#10;			START.serviceEvent(this);&#10;			MotoRotate.value=true;&#10;			System.out.println(&#34;Cas Start&#34;);&#10;		}&#10;		lastBlock.value=Block.value;&#10;	}&#10;}&#10;" />
  </Algorithm>
  <Algorithm Name="START" >
    <ST Text="MotoRotate:=TRUE;&#10;System.out.println(this + &#34; Start &#34; + MotoRotate);&#10;&#10;System.out.println(&#34;Start &#34; + MotoRotate);&#10;" />
  </Algorithm>
  <Algorithm Name="STOP" >
    <Other Language="Java" Text="MotoRotate.value=false;&#10;System.out.println(this+&#34; Stop &#34;+MotoRotate.value);&#10;&#10;System.out.println(&#34;Stop &#34;+MotoRotate.value);&#10;" />
  </Algorithm>
  </BasicFB>
</FBType>
