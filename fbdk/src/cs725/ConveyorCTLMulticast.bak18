<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE FBType SYSTEM "http://www.holobloc.com/xml/LibraryElement.dtd" >
<FBType Name="ConveyorCTLMulticast" Comment="Basic Function Block Type forMulticast" >
  <Identification Standard="61499-2" />
  <VersionInfo Organization="Rockwell Automation" Version="0.2" Author="JHC" Date="2003-12-04" Remarks="Renamed for better indexing." />
  <VersionInfo Organization="Rockwell Automation" Version="0.1" Author="JHC" Date="2002-11-05" Remarks="Corrected missing ST element in Algorithm REQ." />
  <VersionInfo Organization="Rockwell Automation" Version="0.0" Author="JHC" Date="2000-05-30" />
  <CompilerInfo header="package fb.rt.cs725;" >
  </CompilerInfo>
  <InterfaceList>
    <EventInputs>
      <Event Name="INIT" Comment="Initialization Request" >
        <With Var="PE" />
        <With Var="Block" />
        <With Var="Candidate" />
        <With Var="PECS" />
        <With Var="LC" />
        <With Var="TRUMP" />
      </Event>
      <Event Name="REQ" Comment="Normal Execution Request" >
        <With Var="PE" />
        <With Var="Block" />
        <With Var="Candidate" />
        <With Var="PECS" />
        <With Var="LC" />
        <With Var="TRUMP" />
      </Event>
      <Event Name="REC_REQ" >
      </Event>
      <Event Name="REPLY" Type="EVENT" >
      </Event>
      <Event Name="CAS_STOP" >
      </Event>
      <Event Name="CAS_START" >
      </Event>
    </EventInputs>
    <EventOutputs>
      <Event Name="INITO" Comment="Initialization Confirm" >
        <With Var="MotoRotate" />
        <With Var="BlockCon" />
      </Event>
      <Event Name="CNF" Comment="Execution Confirmation" >
        <With Var="MotoRotate" />
        <With Var="BlockCon" />
      </Event>
      <Event Name="STOP" >
      </Event>
      <Event Name="START" >
      </Event>
      <Event Name="ACK" >
      </Event>
      <Event Name="MULTICAST" >
      </Event>
    </EventOutputs>
    <InputVars>
      <VarDeclaration Name="PE" Type="BOOL" Comment="Input event qualifier" />
      <VarDeclaration Name="PECS" Type="BOOL" />
      <VarDeclaration Name="LC" Type="INT" />
      <VarDeclaration Name="Block" Type="BOOL" />
      <VarDeclaration Name="Candidate" Type="BOOL" />
      <VarDeclaration Name="TRUMP" Type="BOOL" />
    </InputVars>
    <OutputVars>
      <VarDeclaration Name="MotoRotate" Type="BOOL" Comment="Output event qualifier" />
      <VarDeclaration Name="BlockCon" Type="BOOL" />
      <VarDeclaration Name="LC_OUT" Type="INT" />
    </OutputVars>
  </InterfaceList>
  <BasicFB>
    <InternalVars>
      <VarDeclaration Name="lastPE" Type="BOOL" InitialValue="1" />
      <VarDeclaration Name="lastBlock" Type="BOOL" InitialValue="0" />
      <VarDeclaration Name="LAM_CLOCK" Type="INT" />
      <VarDeclaration Name="HAS_TOKEN" Type="BOOL" />
    </InternalVars>
    <ECC >
      <ECState Name="START" Comment="Initial State" x="2155.5554" y="372.2222" >
      </ECState>
      <ECState Name="INIT" Comment="Initialization" x="3611.111" y="449.99997" >
        <ECAction Algorithm="INIT" Output="INITO" />
        <ECAction Output="CNF" />
      </ECState>
      <ECState Name="REQ" Comment="Normal execution" x="3794.4443" y="1522.2222" >
        <ECAction Algorithm="REQ" Output="CNF" />
      </ECState>
      <ECState Name="CAS_START" x="3605.5554" y="2594.4443" >
        <ECAction Algorithm="START" Output="START" />
        <ECAction Output="CNF" />
      </ECState>
      <ECState Name="CAS_STOP" x="2116.6665" y="2933.3333" >
        <ECAction Algorithm="STOP" Output="STOP" />
        <ECAction Output="CNF" />
      </ECState>
      <ECState Name="MULTICAST" Comment="When bag is detected, send requests" x="622.22217" y="2594.4443" >
        <ECAction Algorithm="MAKE_REQUEST" Output="MULTICAST" />
        <ECAction Output="CNF" />
      </ECState>
      <ECState Name="ACCESS" x="283.3333" y="1466.6666" >
        <ECAction Algorithm="ENTER_CS" Output="CNF" />
      </ECState>
      <ECState Name="RELEASED" x="577.7778" y="527.7778" >
        <ECAction Algorithm="EXIT_CS" Output="ACK" />
        <ECAction Output="CNF" />
      </ECState>
      <ECState Name="RECEIVE" x="4311.111" y="183.33333" >
        <ECAction Algorithm="LC_CHECK" Output="ACK" />
        <ECAction Output="CNF" />
      </ECState>
      <ECTransition Source="START" Destination="INIT" Condition="INIT" x="3138.8887" y="633.3333" />
      <ECTransition Source="INIT" Destination="START" Condition="1" x="2800.0" y="372.2222" />
      <ECTransition Source="START" Destination="REQ" Condition="REQ&#38;Candidate" x="3261.111" y="1338.8888" />
      <ECTransition Source="REQ" Destination="START" Condition="1" x="2883.3333" y="811.1111" />
      <ECTransition Source="START" Destination="CAS_START" Condition="CAS_START" x="3133.3333" y="2050.0" />
      <ECTransition Source="CAS_START" Destination="START" Condition="1" x="2805.5554" y="1211.1111" />
      <ECTransition Source="START" Destination="CAS_STOP" Condition="CAS_STOP" x="2155.5554" y="2272.2222" />
      <ECTransition Source="CAS_STOP" Destination="START" Condition="1" x="2405.5554" y="1472.2222" />
      <ECTransition Source="START" Destination="MULTICAST" Condition="REQ&#38;!PE" x="1166.6666" y="2050.0" />
      <ECTransition Source="MULTICAST" Destination="ACCESS" Condition="REPLY" x="455.55554" y="1827.7777" />
      <ECTransition Source="ACCESS" Destination="RELEASED" Condition="REQ&#38;!PECS" x="577.7778" y="833.3333" />
      <ECTransition Source="RELEASED" Destination="START" Condition="1" x="1122.2222" y="266.66666" />
      <ECTransition Source="START" Destination="RECEIVE" Condition="REC_REQ&#38;!HAS_TOKEN" x="3505.5554" y="100.0" />
      <ECTransition Source="RECEIVE" Destination="START" Condition="1" x="3572.2222" y="266.66666" />
    </ECC>
  <Algorithm Name="INIT" Comment="Initialization algorithm" >
    <ST Text="MotoRotate := TRUE;&#10;Block := FALSE;&#10;&#10;System.out.println(this + &#34; &#34; + MotoRotate);&#10;System.out.println(MotoRotate);&#10;" />
  </Algorithm>
  <Algorithm Name="REQ" Comment="Normally executed algorithm" >
    <ST Text="System.out.println(this +  &#34; -> Candidate&#34; + Candidate);&#10;IF Candidate THEN&#10;IF lastPE !:= PE THEN&#10;IF NOT PE THEN&#10;BlockCon:= TRUE;&#10;System.out.println(&#34;BlockCon = true&#34;);&#10;ELSE&#10;BlockCon:=FALSE;&#10;System.out.println(&#34;BlockCon = false&#34;);&#10;END_IF&#10;lastPE := PE;&#10;END_IF&#10;IF lastBlock !:= Block THEN&#10;IF Block THEN&#10;STOP.serviceEvent(this);&#10;MotoRotate := FALSE;&#10;System.out.println(&#34;Cas Stop&#34;);&#10;ELSE&#10;START.serviceEvent(this);&#10;MotoRotate := TRUE;&#10;System.out.println(&#34;Cas Start&#34;);&#10;END_IF&#10;lastBlock := Block;&#10;END_IF&#10;END_IF&#10;" />
  </Algorithm>
  <Algorithm Name="START" >
    <ST Text="MotoRotate:=TRUE;&#10;System.out.println(this + &#34; Start &#34; + MotoRotate);&#10;&#10;System.out.println(&#34;Start &#34; + MotoRotate);&#10;" />
  </Algorithm>
  <Algorithm Name="STOP" >
    <ST Text="MotoRotate := FALSE;&#10;System.out.println(this + &#34; Stop &#34; + MotoRotate);&#10;&#10;System.out.println(&#34;Stop &#34; + MotoRotate);&#10;" />
  </Algorithm>
  <Algorithm Name="MAKE_REQUEST" >
    <Other Language="Java" Text="LAM_CLOCK.value++;&#10;LC_OUT.value = LAM_CLOCK.value;&#10;MotoRotate.value = false;&#10;System.out.printf(&#34;[MULTICAST] Request, LC:%d%n&#34;, LAM_CLOCK.value);&#10;" />
  </Algorithm>
  <Algorithm Name="ENTER_CS" >
    <Other Language="Java" Text="HAS_TOKEN.value = true;&#10;MotoRotate.value = true;&#10;System.out.println(&#34;[MULTICAST] Enter CS&#34;);&#10;" />
  </Algorithm>
  <Algorithm Name="EXIT_CS" >
    <Other Language="Java" Text="HAS_TOKEN.value = true;&#10;System.out.println(&#34;[MULTICAST] Exit CS&#34;);&#10;" />
  </Algorithm>
  <Algorithm Name="LC_CHECK" >
    <Other Language="Java" Text="System.out.println(&#34;[MULTICAST] Received request&#34;);&#10;if (LC.value > LAM_CLOCK.value) {&#10;LAM_CLOCK.value = LC.value;&#10;System.out.println(&#34;[MULTICAST] LC Updated&#34;);&#10;}&#10;" />
  </Algorithm>
  </BasicFB>
</FBType>
